Bootstrap: docker
From: ubuntu:20.04
Stage: spython-base

%post
TZ=Europe/London
DEBIAN_FRONTEND=noninteractive

cd /tmp
mkdir ~/apps

# install packages
apt-get update && \
apt-get install -y \
build-essential \
cmake \
git \
wget \
r-base \
python3

# alias python
ln -s /usr/bin/python3 /usr/bin/python

# install R-packages
R -e "install.packages(c('quadprog', 'pwr', 'cqrReg', 'data.table', 'optparse', 'quantreg', 'BEDMatrix', 'broom', 'genpwr', 'dplyr', 'remotes'))"
R -e "remotes::install_github('jrs95/jlst')"
R -e "remotes::install_github('mrcieu/varGWASR')"

# install OSCA
wget https://yanglab.westlake.edu.cn/software/osca/download/osca-0.46.1-linux-x86_64.zip
unzip osca-0.46.1-linux-x86_64.zip
mv osca-0.46.1-linux-x86_64 /usr/bin/osca

# install DRM
git clone http://github.com/drewmard/DRM
mv DRM ~/apps

# install qctool
wget https://code.enkre.net/qctool/zip/release/qctool.tgz
unzip qctool.tgz
cd /tmp/qctool
./waf configure --prefix=/usr
./waf
./waf install
ln -s /usr/bin/qctool_v2.2.0 /usr/bin/qctool

# install BGENIX
cd /tmp
wget http://code.enkre.net/bgen/tarball/release/bgen.tgz
tar -xvf bgen.tgz
cd /tmp/bgen.tgz
./waf configure --prefix=/usr
./waf
./waf install

# install varGWAS
cd /usr/bin
wget https://github.com/MRCIEU/varGWAS/releases/download/1.2.3/varGWAS
chmod a+x ./varGWAS

# install QUAIL
cd /tmp
git clone https://github.com/qlu-lab/QUAIL
mv QUAIL ~/apps

# set working env
cd /app
%environment
export TZ=Europe/London
export DEBIAN_FRONTEND=noninteractive
%runscript
cd /app
exec /bin/bash "$@"
%startscript
cd /app
exec /bin/bash "$@"
