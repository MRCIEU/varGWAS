{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"varGWAS: GWAS of SNP variance effects Software to perform GWAS of SNP variance effects for prioritising GxG/GxE testing Citation Breusch T and Pagan A. A Simple Test for Heteroscedasticity and Random Coefficient Variation. Econometrica, vol. 47, no. 5, p. 1287, Sep. 1979. https://doi.org/10.2307/1911963 Brown M and Forsythe A. Robust tests for the equality of variances. J. Am. Stat. Assoc., 1974. https://doi.org/10.1080/01621459.1974.10482955","title":"Home"},{"location":"#vargwas-gwas-of-snp-variance-effects","text":"Software to perform GWAS of SNP variance effects for prioritising GxG/GxE testing","title":"varGWAS: GWAS of SNP variance effects"},{"location":"#citation","text":"Breusch T and Pagan A. A Simple Test for Heteroscedasticity and Random Coefficient Variation. Econometrica, vol. 47, no. 5, p. 1287, Sep. 1979. https://doi.org/10.2307/1911963 Brown M and Forsythe A. Robust tests for the equality of variances. J. Am. Stat. Assoc., 1974. https://doi.org/10.1080/01621459.1974.10482955","title":"Citation"},{"location":"install/","text":"Install Requires UNIX environment SRC git clone git@github.com:MRCIEU/varGWAS.git cd varGWAS Libraries bash lib.sh Build Tested with GCC v5 & v6. Libscl does not build with GCC >=v7. mkdir -p build cd build cmake .. -DCMAKE_BUILD_TYPE=Release make Note on HPC systems you may need to explicitly set the compiler path # BC4 module load build/gcc-5.5.0 module load tools/cmake/3.20.0 CC=/mnt/storage/software/languages/gcc-5.5.0/bin/gcc \\ CXX=/mnt/storage/software/languages/gcc-5.5.0/bin/g++ \\ cmake .. -DCMAKE_BUILD_TYPE=Release Usage ./varGWAS Program to perform vGWAS of trait against variants in the BGEN format Usage: varGWAS C++ v1.0.0 [OPTION...] -v, --variable_file arg Path to phenotype file -s, --sep arg File separator -c, --covariates arg List of covariates column names separated by a comma (whitespace and quotes are not permitted). -o, --output_file arg Path to output file -b, --bgen_file arg Path to BGEN file -p, --phenotype arg Column name for phenotype -i, --id arg Column name for genotype identifier -r, --robust Robust method using median value (Brown-Forsythe) -h, --help Print usage -t, --threads arg Number of threads (default: 8) Unordered categorical variables should be one-hot encoded. Do not provide null values in the phenotype file - these should be filtered out. Docker Build image docker build -t varGWAS . Perform GWAS docker run \\ -v /Users/ml18692/projects/varGWAS/test/data:/data \\ -e SPDLOG_LEVEL=debug \\ -it varGWAS \\ -v /data/phenotypes.csv \\ -s , \\ -c sex,age,PC.1,PC.2,PC.3,PC.4,PC.5,PC.6,PC.7,PC.8,PC.9,PC.10 \\ -o /data/output.txt \\ -b /data/genotypes.bgen \\ -p Y \\ -i S \\ -t 1 Unit tests Run unit tests mkdir -p build cd build cmake .. -DCMAKE_BUILD_TYPE=Debug make Simulation See README Logging By default logging level is set to INFO. This can be overidden using environmental variables. See details on the spdlog page. export SPDLOG_LEVEL=debug ./varGWAS","title":"Install"},{"location":"install/#install","text":"Requires UNIX environment SRC git clone git@github.com:MRCIEU/varGWAS.git cd varGWAS Libraries bash lib.sh Build Tested with GCC v5 & v6. Libscl does not build with GCC >=v7. mkdir -p build cd build cmake .. -DCMAKE_BUILD_TYPE=Release make Note on HPC systems you may need to explicitly set the compiler path # BC4 module load build/gcc-5.5.0 module load tools/cmake/3.20.0 CC=/mnt/storage/software/languages/gcc-5.5.0/bin/gcc \\ CXX=/mnt/storage/software/languages/gcc-5.5.0/bin/g++ \\ cmake .. -DCMAKE_BUILD_TYPE=Release","title":"Install"},{"location":"install/#usage","text":"./varGWAS Program to perform vGWAS of trait against variants in the BGEN format Usage: varGWAS C++ v1.0.0 [OPTION...] -v, --variable_file arg Path to phenotype file -s, --sep arg File separator -c, --covariates arg List of covariates column names separated by a comma (whitespace and quotes are not permitted). -o, --output_file arg Path to output file -b, --bgen_file arg Path to BGEN file -p, --phenotype arg Column name for phenotype -i, --id arg Column name for genotype identifier -r, --robust Robust method using median value (Brown-Forsythe) -h, --help Print usage -t, --threads arg Number of threads (default: 8) Unordered categorical variables should be one-hot encoded. Do not provide null values in the phenotype file - these should be filtered out.","title":"Usage"},{"location":"install/#docker","text":"Build image docker build -t varGWAS . Perform GWAS docker run \\ -v /Users/ml18692/projects/varGWAS/test/data:/data \\ -e SPDLOG_LEVEL=debug \\ -it varGWAS \\ -v /data/phenotypes.csv \\ -s , \\ -c sex,age,PC.1,PC.2,PC.3,PC.4,PC.5,PC.6,PC.7,PC.8,PC.9,PC.10 \\ -o /data/output.txt \\ -b /data/genotypes.bgen \\ -p Y \\ -i S \\ -t 1","title":"Docker"},{"location":"install/#unit-tests","text":"Run unit tests mkdir -p build cd build cmake .. -DCMAKE_BUILD_TYPE=Debug make","title":"Unit tests"},{"location":"install/#simulation","text":"See README","title":"Simulation"},{"location":"install/#logging","text":"By default logging level is set to INFO. This can be overidden using environmental variables. See details on the spdlog page. export SPDLOG_LEVEL=debug ./varGWAS","title":"Logging"}]}